version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"

  mongo1:
    image: mongo:latest
    container_name: mongo1
    restart: always
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - ./mongo-data/mongo1:/data/db
      - ./mongo-keyfile/keyfile:/data/keyfile
    networks:
      - mongo-net

  mongo2:
    image: mongo:latest
    container_name: mongo2
    restart: always
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - ./mongo-data/mongo2:/data/db
      - ./mongo-keyfile/keyfile:/data/keyfile
    networks:
      - mongo-net

  mongo3:
    image: mongo:latest
    container_name: mongo3
    restart: always
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - ./mongo-data/mongo3:/data/db
      - ./mongo-keyfile/keyfile:/data/keyfile
    networks:
      - mongo-net

  mongo-setup:
    image: mongo:latest
    container_name: mongo-setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net
    entrypoint: [ "bash", "-c", "sleep 10 && mongosh --host mongo1:27017 --eval 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"mongo1:27017\" }, { _id: 1, host: \"mongo2:27017\" }, { _id: 2, host: \"mongo3:27017\" }]})'" ]

  broker:
    image: python:3.9
    container_name: broker
    depends_on:
      - kafka
      - mongo-setup
    volumes:
      - ./broker:/app
    working_dir: /app
    command: >
      sh -c "pip3 install --no-cache-dir -r requirements.txt && python3 broker.py"
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://mongo:27017

networks:
  mongo-net:
    driver: bridge
