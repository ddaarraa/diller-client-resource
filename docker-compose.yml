version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Advertise Kafka for both Docker (`kafka:9092`) & localhost (`localhost:9092`)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"  # Extra port for external access
    networks:
      - kafka-network

  # Kafka UI (Web-based Kafka Management)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      # Kafka UI inside Docker must connect to `kafka:9092`, not `localhost`
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    networks:
      - kafka-network


  mongo1:
    image: mongo:latest
    container_name: mongo1
    hostname: mongo1
    command: mongod --replSet rs0 --bind_ip_all --keyFile /data/mongodb-keyfile
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
    ports:
      - "27017:27017"
    volumes:
      - mongo1_data:/data/db
      - ./mongodb-keyfile:/data/mongodb-keyfile:rw
    networks:
      - shared_network
      - mongo-network:
        ipv4_address: 192.168.117.3
    restart: always

  mongo-init:
    image: mongo:latest
    container_name: mongo-init
    restart: "no"
    networks:
      - mongo-network
    volumes:
      - ./mongodb-keyfile:/data/mongodb-keyfile:rw
    depends_on:
      - mongo1
    command: >
      bash -c "
        sleep 15 
        mongosh --host 192.168.117.3:27017 -u admin -p adminpassword --authenticationDatabase admin --eval '
          config = {
            \"_id\": \"rs0\",
            \"members\": [
              { \"_id\": 0, \"host\": \"localhost:27017\", \"priority\": 2 }
            ]
          };
          rs.initiate(config);
        '
      "
  broker:
    build:
      context: ./broker
      dockerfile: Dockerfile
    container_name: broker
    restart: always
    networks:
      - mongo-network
      - kafka-network
    depends_on:
      - kafka
      - mongo1
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://admin:adminpassword@mongo1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&authSource=admin&appName=mongosh+2.4.0

networks:
  mongo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.117.0/24

  kafka-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.118.0/24

  shared_network:
    driver: bridge
    external: true

volumes:
  mongo1_data:
